typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;
typedef unsigned long u64;
typedef char s8;
typedef short s16;
typedef int s32;
typedef long s64;
#define OLC_PGE_APPLICATION
#include "olcPixelGameEngine.h"
#include "GBA.h"
#include "OLC.h"
#include "GBAtoOLC.h"

uint16_t screendata[32 * 32] =
{
    0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006,
    0x0007, 0x0008, 0x0009, 0x000A, 0x000B, 0x000C,
    0x000D, 0x000E, 0x000F, 0x0010, 0x0011, 0x0012,
    0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 0x0018,
    0x0019, 0x001A, 0x001B, 0x001C, 0x001D, 0x001E,
    0x1F, 0x20,
    0x0001 + 0x20, 0x0002 + 0x20, 0x0003 + 0x20, 0x0004 + 0x20, 0x0005 + 0x20, 0x0006 + 0x20,
    0x0007 + 0x20, 0x0008 + 0x20, 0x0009 + 0x20, 0x000A + 0x20, 0x000B + 0x20, 0x000C + 0x20,
    0x000D + 0x20, 0x000E + 0x20, 0x000F + 0x20, 0x0010 + 0x20, 0x0011 + 0x20, 0x0012 + 0x20,
    0x0013 + 0x20, 0x0014 + 0x20, 0x0015 + 0x20, 0x0016 + 0x20, 0x0017 + 0x20, 0x0018 + 0x20,
    0x0019 + 0x20, 0x001A + 0x20, 0x001B + 0x20, 0x001C + 0x20, 0x001D + 0x20, 0x001E + 0x20,
    0x1F + 0x20, 0x20 + 0x20,
    0x0001 + 0x40, 0x0002 + 0x40, 0x0003 + 0x40, 0x0004 + 0x40, 0x0005 + 0x40, 0x0006 + 0x40,
    0x0007 + 0x40, 0x0008 + 0x40, 0x0009 + 0x40, 0x000A + 0x40, 0x000B + 0x40, 0x000C + 0x40,
    0x000D + 0x40, 0x000E + 0x40, 0x000F + 0x40, 0x0010 + 0x40, 0x0011 + 0x40, 0x0012 + 0x40,
    0x0013 + 0x40, 0x0014 + 0x40, 0x0015 + 0x40, 0x0016 + 0x40, 0x0017 + 0x40, 0x0018 + 0x40,
    0x0019 + 0x40, 0x001A + 0x40, 0x001B + 0x40, 0x001C + 0x40, 0x001D + 0x40, 0x001E + 0x40,
    0x1F + 0x40, 0x20 + 0x40,
    0x0001 + 0x60, 0x0002 + 0x60, 0x0003 + 0x60, 0x0004 + 0x60, 0x0005 + 0x60, 0x0006 + 0x60,
    0x0007 + 0x60, 0x0008 + 0x60, 0x0009 + 0x60, 0x000A + 0x60, 0x000B + 0x60, 0x000C + 0x60,
    0x000D + 0x60, 0x000E + 0x60, 0x000F + 0x60, 0x0010 + 0x60, 0x0011 + 0x60, 0x0012 + 0x60,
    0x0013 + 0x60, 0x0014 + 0x60, 0x0015 + 0x60, 0x0016 + 0x60, 0x0017 + 0x60, 0x0018 + 0x60,
    0x0019 + 0x60, 0x001A + 0x60, 0x001B + 0x60, 0x001C + 0x60, 0x001D + 0x60, 0x001E + 0x60,
    0x1F + 0x60, 0x20 + 0x60,
    0x0001 + 0x80, 0x0002 + 0x80, 0x0003 + 0x80, 0x0004 + 0x80, 0x0005 + 0x80, 0x0006 + 0x80,
    0x0007 + 0x80, 0x0008 + 0x80, 0x0009 + 0x80, 0x000A + 0x80, 0x000B + 0x80, 0x000C + 0x80,
    0x000D + 0x80, 0x000E + 0x80, 0x000F + 0x80, 0x0010 + 0x80, 0x0011 + 0x80, 0x0012 + 0x80,
    0x0013 + 0x80, 0x0014 + 0x80, 0x0015 + 0x80, 0x0016 + 0x80, 0x0017 + 0x80, 0x0018 + 0x80,
    0x0019 + 0x80, 0x001A + 0x80, 0x001B + 0x80, 0x001C + 0x80, 0x001D + 0x80, 0x001E + 0x80,
    0x1F + 0x80, 0x20 + 0x80,
    0x0001 + 0xA0, 0x0002 + 0xA0, 0x0003 + 0xA0, 0x0004 + 0xA0, 0x0005 + 0xA0, 0x0006 + 0xA0,
    0x0007 + 0xA0, 0x0008 + 0xA0, 0x0009 + 0xA0, 0x000A + 0xA0, 0x000B + 0xA0, 0x000C + 0xA0,
    0x000D + 0xA0, 0x000E + 0xA0, 0x000F + 0xA0, 0x0010 + 0xA0, 0x0011 + 0xA0, 0x0012 + 0xA0,
    0x0013 + 0xA0, 0x0014 + 0xA0, 0x0015 + 0xA0, 0x0016 + 0xA0, 0x0017 + 0xA0, 0x0018 + 0xA0,
    0x0019 + 0xA0, 0x001A + 0xA0, 0x001B + 0xA0, 0x001C + 0xA0, 0x001D + 0xA0, 0x001E + 0xA0,
    0x1F + 0xA0, 0x20 + 0xA0,
    0x0001 + 0xC0, 0x0002 + 0xC0, 0x0003 + 0xC0, 0x0004 + 0xC0, 0x0005 + 0xC0, 0x0006 + 0xC0,
    0x0007 + 0xC0, 0x0008 + 0xC0, 0x0009 + 0xC0, 0x000A + 0xC0, 0x000B + 0xC0, 0x000C + 0xC0,
    0x000D + 0xC0, 0x000E + 0xC0, 0x000F + 0xC0, 0x0010 + 0xC0, 0x0011 + 0xC0, 0x0012 + 0xC0,
    0x0013 + 0xC0, 0x0014 + 0xC0, 0x0015 + 0xC0, 0x0016 + 0xC0, 0x0017 + 0xC0, 0x0018 + 0xC0,
    0x0019 + 0xC0, 0x001A + 0xC0, 0x001B + 0xC0, 0x001C + 0xC0, 0x001D + 0xC0, 0x001E + 0xC0,
    0x1F + 0xC0, 0x20 + 0xC0,
    0x0001 + 0xE0, 0x0002 + 0xE0, 0x0003 + 0xE0, 0x0004 + 0xE0, 0x0005 + 0xE0, 0x0006 + 0xE0,
    0x0007 + 0xE0, 0x0008 + 0xE0, 0x0009 + 0xE0, 0x000A + 0xE0, 0x000B + 0xE0, 0x000C + 0xE0,
    0x000D + 0xE0, 0x000E + 0xE0, 0x000F + 0xE0, 0x0010 + 0xE0, 0x0011 + 0xE0, 0x0012 + 0xE0,
    0x0013 + 0xE0, 0x0014 + 0xE0, 0x0015 + 0xE0, 0x0016 + 0xE0, 0x0017 + 0xE0, 0x0018 + 0xE0,
    0x0019 + 0xE0, 0x001A + 0xE0, 0x001B + 0xE0, 0x001C + 0xE0, 0x001D + 0xE0, 0x001E + 0xE0,
    0x1F + 0xE0, 0x20 + 0xE0,
    0x0001 + 0x100, 0x0002 + 0x100, 0x0003 + 0x100, 0x0004 + 0x100, 0x0005 + 0x100, 0x0006 + 0x100,
    0x0007 + 0x100, 0x0008 + 0x100, 0x0009 + 0x100, 0x000A + 0x100, 0x000B + 0x100, 0x000C + 0x100,
    0x000D + 0x100, 0x000E + 0x100, 0x000F + 0x100, 0x0010 + 0x100, 0x0011 + 0x100, 0x0012 + 0x100,
    0x0013 + 0x100, 0x0014 + 0x100, 0x0015 + 0x100, 0x0016 + 0x100, 0x0017 + 0x100, 0x0018 + 0x100,
    0x0019 + 0x100, 0x001A + 0x100, 0x001B + 0x100, 0x001C + 0x100, 0x001D + 0x100, 0x001E + 0x100,
    0x1F + 0x100, 0x20 + 0x100,
    0x0001 + 0x20 + 0x100, 0x0002 + 0x20 + 0x100, 0x0003 + 0x20 + 0x100, 0x0004 + 0x20 + 0x100, 0x0005 + 0x20 + 0x100, 0x0006 + 0x20 + 0x100,
    0x0007 + 0x20 + 0x100, 0x0008 + 0x20 + 0x100, 0x0009 + 0x20 + 0x100, 0x000A + 0x20 + 0x100, 0x000B + 0x20 + 0x100, 0x000C + 0x20 + 0x100,
    0x000D + 0x20 + 0x100, 0x000E + 0x20 + 0x100, 0x000F + 0x20 + 0x100, 0x0010 + 0x20 + 0x100, 0x0011 + 0x20 + 0x100, 0x0012 + 0x20 + 0x100,
    0x0013 + 0x20 + 0x100, 0x0014 + 0x20 + 0x100, 0x0015 + 0x20 + 0x100, 0x0016 + 0x20 + 0x100, 0x0017 + 0x20 + 0x100, 0x0018 + 0x20 + 0x100,
    0x0019 + 0x20 + 0x100, 0x001A + 0x20 + 0x100, 0x001B + 0x20 + 0x100, 0x001C + 0x20 + 0x100, 0x001D + 0x20 + 0x100, 0x001E + 0x20 + 0x100,
    0x1F + 0x20 + 0x100, 0x20 + 0x20 + 0x100,
    0x0001 + 0x40 + 0x100, 0x0002 + 0x40 + 0x100, 0x0003 + 0x40 + 0x100, 0x0004 + 0x40 + 0x100, 0x0005 + 0x40 + 0x100, 0x0006 + 0x40 + 0x100,
    0x0007 + 0x40 + 0x100, 0x0008 + 0x40 + 0x100, 0x0009 + 0x40 + 0x100, 0x000A + 0x40 + 0x100, 0x000B + 0x40 + 0x100, 0x000C + 0x40 + 0x100,
    0x000D + 0x40 + 0x100, 0x000E + 0x40 + 0x100, 0x000F + 0x40 + 0x100, 0x0010 + 0x40 + 0x100, 0x0011 + 0x40 + 0x100, 0x0012 + 0x40 + 0x100,
    0x0013 + 0x40 + 0x100, 0x0014 + 0x40 + 0x100, 0x0015 + 0x40 + 0x100, 0x0016 + 0x40 + 0x100, 0x0017 + 0x40 + 0x100, 0x0018 + 0x40 + 0x100,
    0x0019 + 0x40 + 0x100, 0x001A + 0x40 + 0x100, 0x001B + 0x40 + 0x100, 0x001C + 0x40 + 0x100, 0x001D + 0x40 + 0x100, 0x001E + 0x40 + 0x100,
    0x1F + 0x40 + 0x100, 0x20 + 0x40 + 0x100,
    0x0001 + 0x60 + 0x100, 0x0002 + 0x60 + 0x100, 0x0003 + 0x60 + 0x100, 0x0004 + 0x60 + 0x100, 0x0005 + 0x60 + 0x100, 0x0006 + 0x60 + 0x100,
    0x0007 + 0x60 + 0x100, 0x0008 + 0x60 + 0x100, 0x0009 + 0x60 + 0x100, 0x000A + 0x60 + 0x100, 0x000B + 0x60 + 0x100, 0x000C + 0x60 + 0x100,
    0x000D + 0x60 + 0x100, 0x000E + 0x60 + 0x100, 0x000F + 0x60 + 0x100, 0x0010 + 0x60 + 0x100, 0x0011 + 0x60 + 0x100, 0x0012 + 0x60 + 0x100,
    0x0013 + 0x60 + 0x100, 0x0014 + 0x60 + 0x100, 0x0015 + 0x60 + 0x100, 0x0016 + 0x60 + 0x100, 0x0017 + 0x60 + 0x100, 0x0018 + 0x60 + 0x100,
    0x0019 + 0x60 + 0x100, 0x001A + 0x60 + 0x100, 0x001B + 0x60 + 0x100, 0x001C + 0x60 + 0x100, 0x001D + 0x60 + 0x100, 0x001E + 0x60 + 0x100,
    0x1F + 0x60 + 0x100, 0x20 + 0x60 + 0x100,
    0x0001 + 0x80 + 0x100, 0x0002 + 0x80 + 0x100, 0x0003 + 0x80 + 0x100, 0x0004 + 0x80 + 0x100, 0x0005 + 0x80 + 0x100, 0x0006 + 0x80 + 0x100,
    0x0007 + 0x80 + 0x100, 0x0008 + 0x80 + 0x100, 0x0009 + 0x80 + 0x100, 0x000A + 0x80 + 0x100, 0x000B + 0x80 + 0x100, 0x000C + 0x80 + 0x100,
    0x000D + 0x80 + 0x100, 0x000E + 0x80 + 0x100, 0x000F + 0x80 + 0x100, 0x0010 + 0x80 + 0x100, 0x0011 + 0x80 + 0x100, 0x0012 + 0x80 + 0x100,
    0x0013 + 0x80 + 0x100, 0x0014 + 0x80 + 0x100, 0x0015 + 0x80 + 0x100, 0x0016 + 0x80 + 0x100, 0x0017 + 0x80 + 0x100, 0x0018 + 0x80 + 0x100,
    0x0019 + 0x80 + 0x100, 0x001A + 0x80 + 0x100, 0x001B + 0x80 + 0x100, 0x001C + 0x80 + 0x100, 0x001D + 0x80 + 0x100, 0x001E + 0x80 + 0x100,
    0x1F + 0x80 + 0x100, 0x20 + 0x80 + 0x100,
    0x0001 + 0xA0 + 0x100, 0x0002 + 0xA0 + 0x100, 0x0003 + 0xA0 + 0x100, 0x0004 + 0xA0 + 0x100, 0x0005 + 0xA0 + 0x100, 0x0006 + 0xA0 + 0x100,
    0x0007 + 0xA0 + 0x100, 0x0008 + 0xA0 + 0x100, 0x0009 + 0xA0 + 0x100, 0x000A + 0xA0 + 0x100, 0x000B + 0xA0 + 0x100, 0x000C + 0xA0 + 0x100,
    0x000D + 0xA0 + 0x100, 0x000E + 0xA0 + 0x100, 0x000F + 0xA0 + 0x100, 0x0010 + 0xA0 + 0x100, 0x0011 + 0xA0 + 0x100, 0x0012 + 0xA0 + 0x100,
    0x0013 + 0xA0 + 0x100, 0x0014 + 0xA0 + 0x100, 0x0015 + 0xA0 + 0x100, 0x0016 + 0xA0 + 0x100, 0x0017 + 0xA0 + 0x100, 0x0018 + 0xA0 + 0x100,
    0x0019 + 0xA0 + 0x100, 0x001A + 0xA0 + 0x100, 0x001B + 0xA0 + 0x100, 0x001C + 0xA0 + 0x100, 0x001D + 0xA0 + 0x100, 0x001E + 0xA0 + 0x100,
    0x1F + 0xA0 + 0x100, 0x20 + 0xA0 + 0x100,
    0x0001 + 0xC0 + 0x100, 0x0002 + 0xC0 + 0x100, 0x0003 + 0xC0 + 0x100, 0x0004 + 0xC0 + 0x100, 0x0005 + 0xC0 + 0x100, 0x0006 + 0xC0 + 0x100,
    0x0007 + 0xC0 + 0x100, 0x0008 + 0xC0 + 0x100, 0x0009 + 0xC0 + 0x100, 0x000A + 0xC0 + 0x100, 0x000B + 0xC0 + 0x100, 0x000C + 0xC0 + 0x100,
    0x000D + 0xC0 + 0x100, 0x000E + 0xC0 + 0x100, 0x000F + 0xC0 + 0x100, 0x0010 + 0xC0 + 0x100, 0x0011 + 0xC0 + 0x100, 0x0012 + 0xC0 + 0x100,
    0x0013 + 0xC0 + 0x100, 0x0014 + 0xC0 + 0x100, 0x0015 + 0xC0 + 0x100, 0x0016 + 0xC0 + 0x100, 0x0017 + 0xC0 + 0x100, 0x0018 + 0xC0 + 0x100,
    0x0019 + 0xC0 + 0x100, 0x001A + 0xC0 + 0x100, 0x001B + 0xC0 + 0x100, 0x001C + 0xC0 + 0x100, 0x001D + 0xC0 + 0x100, 0x001E + 0xC0 + 0x100,
    0x1F + 0xC0 + 0x100, 0x20 + 0xC0 + 0x100,
    0x0001 + 0xE0 + 0x100, 0x0002 + 0xE0 + 0x100, 0x0003 + 0xE0 + 0x100, 0x0004 + 0xE0 + 0x100, 0x0005 + 0xE0 + 0x100, 0x0006 + 0xE0 + 0x100,
    0x0007 + 0xE0 + 0x100, 0x0008 + 0xE0 + 0x100, 0x0009 + 0xE0 + 0x100, 0x000A + 0xE0 + 0x100, 0x000B + 0xE0 + 0x100, 0x000C + 0xE0 + 0x100,
    0x000D + 0xE0 + 0x100, 0x000E + 0xE0 + 0x100, 0x000F + 0xE0 + 0x100, 0x0010 + 0xE0 + 0x100, 0x0011 + 0xE0 + 0x100, 0x0012 + 0xE0 + 0x100,
    0x0013 + 0xE0 + 0x100, 0x0014 + 0xE0 + 0x100, 0x0015 + 0xE0 + 0x100, 0x0016 + 0xE0 + 0x100, 0x0017 + 0xE0 + 0x100, 0x0018 + 0xE0 + 0x100,
    0x0019 + 0xE0 + 0x100, 0x001A + 0xE0 + 0x100, 0x001B + 0xE0 + 0x100, 0x001C + 0xE0 + 0x100, 0x001D + 0xE0 + 0x100, 0x001E + 0xE0 + 0x100,
    0x1F + 0xE0 + 0x100, 0x20 + 0xE0 + 0x100,
    0x0001 + 0x200, 0x0002 + 0x200, 0x0003 + 0x200, 0x0004 + 0x200, 0x0005 + 0x200, 0x0006 + 0x200,
    0x0007 + 0x200, 0x0008 + 0x200, 0x0009 + 0x200, 0x000A + 0x200, 0x000B + 0x200, 0x000C + 0x200,
    0x000D + 0x200, 0x000E + 0x200, 0x000F + 0x200, 0x0010 + 0x200, 0x0011 + 0x200, 0x0012 + 0x200,
    0x0013 + 0x200, 0x0014 + 0x200, 0x0015 + 0x200, 0x0016 + 0x200, 0x0017 + 0x200, 0x0018 + 0x200,
    0x0019 + 0x200, 0x001A + 0x200, 0x001B + 0x200, 0x001C + 0x200, 0x001D + 0x200, 0x001E + 0x200,
    0x1F + 0x200, 0x20 + 0x200,
    0x0001 + 0x20 + 0x200, 0x0002 + 0x20 + 0x200, 0x0003 + 0x20 + 0x200, 0x0004 + 0x20 + 0x200, 0x0005 + 0x20 + 0x200, 0x0006 + 0x20 + 0x200,
    0x0007 + 0x20 + 0x200, 0x0008 + 0x20 + 0x200, 0x0009 + 0x20 + 0x200, 0x000A + 0x20 + 0x200, 0x000B + 0x20 + 0x200, 0x000C + 0x20 + 0x200,
    0x000D + 0x20 + 0x200, 0x000E + 0x20 + 0x200, 0x000F + 0x20 + 0x200, 0x0010 + 0x20 + 0x200, 0x0011 + 0x20 + 0x200, 0x0012 + 0x20 + 0x200,
    0x0013 + 0x20 + 0x200, 0x0014 + 0x20 + 0x200, 0x0015 + 0x20 + 0x200, 0x0016 + 0x20 + 0x200, 0x0017 + 0x20 + 0x200, 0x0018 + 0x20 + 0x200,
    0x0019 + 0x20 + 0x200, 0x001A + 0x20 + 0x200, 0x001B + 0x20 + 0x200, 0x001C + 0x20 + 0x200, 0x001D + 0x20 + 0x200, 0x001E + 0x20 + 0x200,
    0x1F + 0x20 + 0x200, 0x20 + 0x20 + 0x200,
    0x0001 + 0x40 + 0x200, 0x0002 + 0x40 + 0x200, 0x0003 + 0x40 + 0x200, 0x0004 + 0x40 + 0x200, 0x0005 + 0x40 + 0x200, 0x0006 + 0x40 + 0x200,
    0x0007 + 0x40 + 0x200, 0x0008 + 0x40 + 0x200, 0x0009 + 0x40 + 0x200, 0x000A + 0x40 + 0x200, 0x000B + 0x40 + 0x200, 0x000C + 0x40 + 0x200,
    0x000D + 0x40 + 0x200, 0x000E + 0x40 + 0x200, 0x000F + 0x40 + 0x200, 0x0010 + 0x40 + 0x200, 0x0011 + 0x40 + 0x200, 0x0012 + 0x40 + 0x200,
    0x0013 + 0x40 + 0x200, 0x0014 + 0x40 + 0x200, 0x0015 + 0x40 + 0x200, 0x0016 + 0x40 + 0x200, 0x0017 + 0x40 + 0x200, 0x0018 + 0x40 + 0x200,
    0x0019 + 0x40 + 0x200, 0x001A + 0x40 + 0x200, 0x001B + 0x40 + 0x200, 0x001C + 0x40 + 0x200, 0x001D + 0x40 + 0x200, 0x001E + 0x40 + 0x200,
    0x1F + 0x40 + 0x200, 0x20 + 0x40 + 0x200,
    0x0001 + 0x60 + 0x200, 0x0002 + 0x60 + 0x200, 0x0003 + 0x60 + 0x200, 0x0004 + 0x60 + 0x200, 0x0005 + 0x60 + 0x200, 0x0006 + 0x60 + 0x200,
    0x0007 + 0x60 + 0x200, 0x0008 + 0x60 + 0x200, 0x0009 + 0x60 + 0x200, 0x000A + 0x60 + 0x200, 0x000B + 0x60 + 0x200, 0x000C + 0x60 + 0x200,
    0x000D + 0x60 + 0x200, 0x000E + 0x60 + 0x200, 0x000F + 0x60 + 0x200, 0x0010 + 0x60 + 0x200, 0x0011 + 0x60 + 0x200, 0x0012 + 0x60 + 0x200,
    0x0013 + 0x60 + 0x200, 0x0014 + 0x60 + 0x200, 0x0015 + 0x60 + 0x200, 0x0016 + 0x60 + 0x200, 0x0017 + 0x60 + 0x200, 0x0018 + 0x60 + 0x200,
    0x0019 + 0x60 + 0x200, 0x001A + 0x60 + 0x200, 0x001B + 0x60 + 0x200, 0x001C + 0x60 + 0x200, 0x001D + 0x60 + 0x200, 0x001E + 0x60 + 0x200,
    0x1F + 0x60 + 0x200, 0x20 + 0x60 + 0x200,
    0x0001 + 0x80 + 0x200, 0x0002 + 0x80 + 0x200, 0x0003 + 0x80 + 0x200, 0x0004 + 0x80 + 0x200, 0x0005 + 0x80 + 0x200, 0x0006 + 0x80 + 0x200,
    0x0007 + 0x80 + 0x200, 0x0008 + 0x80 + 0x200, 0x0009 + 0x80 + 0x200, 0x000A + 0x80 + 0x200, 0x000B + 0x80 + 0x200, 0x000C + 0x80 + 0x200,
    0x000D + 0x80 + 0x200, 0x000E + 0x80 + 0x200, 0x000F + 0x80 + 0x200, 0x0010 + 0x80 + 0x200, 0x0011 + 0x80 + 0x200, 0x0012 + 0x80 + 0x200,
    0x0013 + 0x80 + 0x200, 0x0014 + 0x80 + 0x200, 0x0015 + 0x80 + 0x200, 0x0016 + 0x80 + 0x200, 0x0017 + 0x80 + 0x200, 0x0018 + 0x80 + 0x200,
    0x0019 + 0x80 + 0x200, 0x001A + 0x80 + 0x200, 0x001B + 0x80 + 0x200, 0x001C + 0x80 + 0x200, 0x001D + 0x80 + 0x200, 0x001E + 0x80 + 0x200,
    0x1F + 0x80 + 0x200, 0x20 + 0x80 + 0x200,
    0x0001 + 0xA0 + 0x200, 0x0002 + 0xA0 + 0x200, 0x0003 + 0xA0 + 0x200, 0x0004 + 0xA0 + 0x200, 0x0005 + 0xA0 + 0x200, 0x0006 + 0xA0 + 0x200,
    0x0007 + 0xA0 + 0x200, 0x0008 + 0xA0 + 0x200, 0x0009 + 0xA0 + 0x200, 0x000A + 0xA0 + 0x200, 0x000B + 0xA0 + 0x200, 0x000C + 0xA0 + 0x200,
    0x000D + 0xA0 + 0x200, 0x000E + 0xA0 + 0x200, 0x000F + 0xA0 + 0x200, 0x0010 + 0xA0 + 0x200, 0x0011 + 0xA0 + 0x200, 0x0012 + 0xA0 + 0x200,
    0x0013 + 0xA0 + 0x200, 0x0014 + 0xA0 + 0x200, 0x0015 + 0xA0 + 0x200, 0x0016 + 0xA0 + 0x200, 0x0017 + 0xA0 + 0x200, 0x0018 + 0xA0 + 0x200,
    0x0019 + 0xA0 + 0x200, 0x001A + 0xA0 + 0x200, 0x001B + 0xA0 + 0x200, 0x001C + 0xA0 + 0x200, 0x001D + 0xA0 + 0x200, 0x001E + 0xA0 + 0x200,
    0x1F + 0xA0 + 0x200, 0x20 + 0xA0 + 0x200,
    0x0001 + 0xC0 + 0x200, 0x0002 + 0xC0 + 0x200, 0x0003 + 0xC0 + 0x200, 0x0004 + 0xC0 + 0x200, 0x0005 + 0xC0 + 0x200, 0x0006 + 0xC0 + 0x200,
    0x0007 + 0xC0 + 0x200, 0x0008 + 0xC0 + 0x200, 0x0009 + 0xC0 + 0x200, 0x000A + 0xC0 + 0x200, 0x000B + 0xC0 + 0x200, 0x000C + 0xC0 + 0x200,
    0x000D + 0xC0 + 0x200, 0x000E + 0xC0 + 0x200, 0x000F + 0xC0 + 0x200, 0x0010 + 0xC0 + 0x200, 0x0011 + 0xC0 + 0x200, 0x0012 + 0xC0 + 0x200,
    0x0013 + 0xC0 + 0x200, 0x0014 + 0xC0 + 0x200, 0x0015 + 0xC0 + 0x200, 0x0016 + 0xC0 + 0x200, 0x0017 + 0xC0 + 0x200, 0x0018 + 0xC0 + 0x200,
    0x0019 + 0xC0 + 0x200, 0x001A + 0xC0 + 0x200, 0x001B + 0xC0 + 0x200, 0x001C + 0xC0 + 0x200, 0x001D + 0xC0 + 0x200, 0x001E + 0xC0 + 0x200,
    0x1F + 0xC0 + 0x200, 0x20 + 0xC0 + 0x200,
    0x0001 + 0xE0 + 0x200, 0x0002 + 0xE0 + 0x200, 0x0003 + 0xE0 + 0x200, 0x0004 + 0xE0 + 0x200, 0x0005 + 0xE0 + 0x200, 0x0006 + 0xE0 + 0x200,
    0x0007 + 0xE0 + 0x200, 0x0008 + 0xE0 + 0x200, 0x0009 + 0xE0 + 0x200, 0x000A + 0xE0 + 0x200, 0x000B + 0xE0 + 0x200, 0x000C + 0xE0 + 0x200,
    0x000D + 0xE0 + 0x200, 0x000E + 0xE0 + 0x200, 0x000F + 0xE0 + 0x200, 0x0010 + 0xE0 + 0x200, 0x0011 + 0xE0 + 0x200, 0x0012 + 0xE0 + 0x200,
    0x0013 + 0xE0 + 0x200, 0x0014 + 0xE0 + 0x200, 0x0015 + 0xE0 + 0x200, 0x0016 + 0xE0 + 0x200, 0x0017 + 0xE0 + 0x200, 0x0018 + 0xE0 + 0x200,
    0x0019 + 0xE0 + 0x200, 0x001A + 0xE0 + 0x200, 0x001B + 0xE0 + 0x200, 0x001C + 0xE0 + 0x200, 0x001D + 0xE0 + 0x200, 0x001E + 0xE0 + 0x200,
    0x1F + 0xE0 + 0x200, 0x20 + 0xE0 + 0x200,
    0x0001 + 0x300, 0x0002 + 0x300, 0x0003 + 0x300, 0x0004 + 0x300, 0x0005 + 0x300, 0x0006 + 0x300,
    0x0007 + 0x300, 0x0008 + 0x300, 0x0009 + 0x300, 0x000A + 0x300, 0x000B + 0x300, 0x000C + 0x300,
    0x000D + 0x300, 0x000E + 0x300, 0x000F + 0x300, 0x0010 + 0x300, 0x0011 + 0x300, 0x0012 + 0x300,
    0x0013 + 0x300, 0x0014 + 0x300, 0x0015 + 0x300, 0x0016 + 0x300, 0x0017 + 0x300, 0x0018 + 0x300,
    0x0019 + 0x300, 0x001A + 0x300, 0x001B + 0x300, 0x001C + 0x300, 0x001D + 0x300, 0x001E + 0x300,
    0x1F + 0x300, 0x20 + 0x300,
    0x0001 + 0x20 + 0x300, 0x0002 + 0x20 + 0x300, 0x0003 + 0x20 + 0x300, 0x0004 + 0x20 + 0x300, 0x0005 + 0x20 + 0x300, 0x0006 + 0x20 + 0x300,
    0x0007 + 0x20 + 0x300, 0x0008 + 0x20 + 0x300, 0x0009 + 0x20 + 0x300, 0x000A + 0x20 + 0x300, 0x000B + 0x20 + 0x300, 0x000C + 0x20 + 0x300,
    0x000D + 0x20 + 0x300, 0x000E + 0x20 + 0x300, 0x000F + 0x20 + 0x300, 0x0010 + 0x20 + 0x300, 0x0011 + 0x20 + 0x300, 0x0012 + 0x20 + 0x300,
    0x0013 + 0x20 + 0x300, 0x0014 + 0x20 + 0x300, 0x0015 + 0x20 + 0x300, 0x0016 + 0x20 + 0x300, 0x0017 + 0x20 + 0x300, 0x0018 + 0x20 + 0x300,
    0x0019 + 0x20 + 0x300, 0x001A + 0x20 + 0x300, 0x001B + 0x20 + 0x300, 0x001C + 0x20 + 0x300, 0x001D + 0x20 + 0x300, 0x001E + 0x20 + 0x300,
    0x1F + 0x20 + 0x300, 0x20 + 0x20 + 0x300,
    0x0001 + 0x40 + 0x300, 0x0002 + 0x40 + 0x300, 0x0003 + 0x40 + 0x300, 0x0004 + 0x40 + 0x300, 0x0005 + 0x40 + 0x300, 0x0006 + 0x40 + 0x300,
    0x0007 + 0x40 + 0x300, 0x0008 + 0x40 + 0x300, 0x0009 + 0x40 + 0x300, 0x000A + 0x40 + 0x300, 0x000B + 0x40 + 0x300, 0x000C + 0x40 + 0x300,
    0x000D + 0x40 + 0x300, 0x000E + 0x40 + 0x300, 0x000F + 0x40 + 0x300, 0x0010 + 0x40 + 0x300, 0x0011 + 0x40 + 0x300, 0x0012 + 0x40 + 0x300,
    0x0013 + 0x40 + 0x300, 0x0014 + 0x40 + 0x300, 0x0015 + 0x40 + 0x300, 0x0016 + 0x40 + 0x300, 0x0017 + 0x40 + 0x300, 0x0018 + 0x40 + 0x300,
    0x0019 + 0x40 + 0x300, 0x001A + 0x40 + 0x300, 0x001B + 0x40 + 0x300, 0x001C + 0x40 + 0x300, 0x001D + 0x40 + 0x300, 0x001E + 0x40 + 0x300,
    0x1F + 0x40 + 0x300, 0x20 + 0x40 + 0x300,
    0x0001 + 0x60 + 0x300, 0x0002 + 0x60 + 0x300, 0x0003 + 0x60 + 0x300, 0x0004 + 0x60 + 0x300, 0x0005 + 0x60 + 0x300, 0x0006 + 0x60 + 0x300,
    0x0007 + 0x60 + 0x300, 0x0008 + 0x60 + 0x300, 0x0009 + 0x60 + 0x300, 0x000A + 0x60 + 0x300, 0x000B + 0x60 + 0x300, 0x000C + 0x60 + 0x300,
    0x000D + 0x60 + 0x300, 0x000E + 0x60 + 0x300, 0x000F + 0x60 + 0x300, 0x0010 + 0x60 + 0x300, 0x0011 + 0x60 + 0x300, 0x0012 + 0x60 + 0x300,
    0x0013 + 0x60 + 0x300, 0x0014 + 0x60 + 0x300, 0x0015 + 0x60 + 0x300, 0x0016 + 0x60 + 0x300, 0x0017 + 0x60 + 0x300, 0x0018 + 0x60 + 0x300,
    0x0019 + 0x60 + 0x300, 0x001A + 0x60 + 0x300, 0x001B + 0x60 + 0x300, 0x001C + 0x60 + 0x300, 0x001D + 0x60 + 0x300, 0x001E + 0x60 + 0x300,
    0x1F + 0x60 + 0x300, 0x20 + 0x60 + 0x300,
    0x0001 + 0x80 + 0x300, 0x0002 + 0x80 + 0x300, 0x0003 + 0x80 + 0x300, 0x0004 + 0x80 + 0x300, 0x0005 + 0x80 + 0x300, 0x0006 + 0x80 + 0x300,
    0x0007 + 0x80 + 0x300, 0x0008 + 0x80 + 0x300, 0x0009 + 0x80 + 0x300, 0x000A + 0x80 + 0x300, 0x000B + 0x80 + 0x300, 0x000C + 0x80 + 0x300,
    0x000D + 0x80 + 0x300, 0x000E + 0x80 + 0x300, 0x000F + 0x80 + 0x300, 0x0010 + 0x80 + 0x300, 0x0011 + 0x80 + 0x300, 0x0012 + 0x80 + 0x300,
    0x0013 + 0x80 + 0x300, 0x0014 + 0x80 + 0x300, 0x0015 + 0x80 + 0x300, 0x0016 + 0x80 + 0x300, 0x0017 + 0x80 + 0x300, 0x0018 + 0x80 + 0x300,
    0x0019 + 0x80 + 0x300, 0x001A + 0x80 + 0x300, 0x001B + 0x80 + 0x300, 0x001C + 0x80 + 0x300, 0x001D + 0x80 + 0x300, 0x001E + 0x80 + 0x300,
    0x1F + 0x80 + 0x300, 0x20 + 0x80 + 0x300,
    0x0001 + 0xA0 + 0x300, 0x0002 + 0xA0 + 0x300, 0x0003 + 0xA0 + 0x300, 0x0004 + 0xA0 + 0x300, 0x0005 + 0xA0 + 0x300, 0x0006 + 0xA0 + 0x300,
    0x0007 + 0xA0 + 0x300, 0x0008 + 0xA0 + 0x300, 0x0009 + 0xA0 + 0x300, 0x000A + 0xA0 + 0x300, 0x000B + 0xA0 + 0x300, 0x000C + 0xA0 + 0x300,
    0x000D + 0xA0 + 0x300, 0x000E + 0xA0 + 0x300, 0x000F + 0xA0 + 0x300, 0x0010 + 0xA0 + 0x300, 0x0011 + 0xA0 + 0x300, 0x0012 + 0xA0 + 0x300,
    0x0013 + 0xA0 + 0x300, 0x0014 + 0xA0 + 0x300, 0x0015 + 0xA0 + 0x300, 0x0016 + 0xA0 + 0x300, 0x0017 + 0xA0 + 0x300, 0x0018 + 0xA0 + 0x300,
    0x0019 + 0xA0 + 0x300, 0x001A + 0xA0 + 0x300, 0x001B + 0xA0 + 0x300, 0x001C + 0xA0 + 0x300, 0x001D + 0xA0 + 0x300, 0x001E + 0xA0 + 0x300,
    0x1F + 0xA0 + 0x300, 0x20 + 0xA0 + 0x300,
    0x0001 + 0xC0 + 0x300, 0x0002 + 0xC0 + 0x300, 0x0003 + 0xC0 + 0x300, 0x0004 + 0xC0 + 0x300, 0x0005 + 0xC0 + 0x300, 0x0006 + 0xC0 + 0x300,
    0x0007 + 0xC0 + 0x300, 0x0008 + 0xC0 + 0x300, 0x0009 + 0xC0 + 0x300, 0x000A + 0xC0 + 0x300, 0x000B + 0xC0 + 0x300, 0x000C + 0xC0 + 0x300,
    0x000D + 0xC0 + 0x300, 0x000E + 0xC0 + 0x300, 0x000F + 0xC0 + 0x300, 0x0010 + 0xC0 + 0x300, 0x0011 + 0xC0 + 0x300, 0x0012 + 0xC0 + 0x300,
    0x0013 + 0xC0 + 0x300, 0x0014 + 0xC0 + 0x300, 0x0015 + 0xC0 + 0x300, 0x0016 + 0xC0 + 0x300, 0x0017 + 0xC0 + 0x300, 0x0018 + 0xC0 + 0x300,
    0x0019 + 0xC0 + 0x300, 0x001A + 0xC0 + 0x300, 0x001B + 0xC0 + 0x300, 0x001C + 0xC0 + 0x300, 0x001D + 0xC0 + 0x300, 0x001E + 0xC0 + 0x300,
    0x1F + 0xC0 + 0x300, 0x20 + 0xC0 + 0x300,
    0x0001 + 0xE0 + 0x300, 0x0002 + 0xE0 + 0x300, 0x0003 + 0xE0 + 0x300, 0x0004 + 0xE0 + 0x300, 0x0005 + 0xE0 + 0x300, 0x0006 + 0xE0 + 0x300,
    0x0007 + 0xE0 + 0x300, 0x0008 + 0xE0 + 0x300, 0x0009 + 0xE0 + 0x300, 0x000A + 0xE0 + 0x300, 0x000B + 0xE0 + 0x300, 0x000C + 0xE0 + 0x300,
    0x000D + 0xE0 + 0x300, 0x000E + 0xE0 + 0x300, 0x000F + 0xE0 + 0x300, 0x0010 + 0xE0 + 0x300, 0x0011 + 0xE0 + 0x300, 0x0012 + 0xE0 + 0x300,
    0x0013 + 0xE0 + 0x300, 0x0014 + 0xE0 + 0x300, 0x0015 + 0xE0 + 0x300, 0x0016 + 0xE0 + 0x300, 0x0017 + 0xE0 + 0x300, 0x0018 + 0xE0 + 0x300,
    0x0019 + 0xE0 + 0x300, 0x001A + 0xE0 + 0x300, 0x001B + 0xE0 + 0x300, 0x001C + 0xE0 + 0x300, 0x001D + 0xE0 + 0x300, 0x001E + 0xE0 + 0x300,
    0x1F + 0xE0 + 0x300, 0x20 + 0xE0 + 0x300,
};
uint16_t screendata1[32 * 32] =
{
    0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
    0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
    0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
    0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
    0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
    0x0, 0x0,
    0x1001, 0x1002, 0x1003, 0x1004, 0x1005, 0x1006,
    0x1007, 0x1008, 0x1009, 0x100A, 0x100B, 0x100C,
    0x100D, 0x100E, 0x100F, 0x1010, 0x1011, 0x1012,
    0x1013, 0x1014, 0x1015, 0x1016, 0x1017, 0x1018,
    0x1019, 0x101A, 0x101B, 0x101C, 0x101D, 0x101E,
    0x0, 0x0,
    0x101F, 0x1020, 0x1021, 0x1022, 0x1023, 0x1024,
    0x1025, 0x1026, 0x1027, 0x1028, 0x1029, 0x102A,
    0x102B, 0x102C, 0x102D, 0x102E, 0x102F, 0x1030,
    0x1031, 0x1032, 0x1033, 0x1034, 0x1035, 0x1036,
    0x1037, 0x1038, 0x1039, 0x103A, 0x103B, 0x103C,
    0x0, 0x0,
    0x103D, 0x103E, 0x103F, 0x1040, 0x1041, 0x1042,
    0x1043, 0x1044, 0x1045, 0x1046, 0x1047, 0x1048,
    0x1049, 0x104A, 0x104B, 0x104C, 0x104D, 0x104E,
    0x104F, 0x1050, 0x1051, 0x1052, 0x1053, 0x1054,
    0x1055, 0x1056, 0x1057, 0x1058, 0x1059, 0x105A,
    0x0, 0x0
};

struct gameinst : public olc::PixelGameEngine
{
    POINT p;
    int iTime = 0;
    float fTimeaccu = 0;

    bool OnUserCreate() override
    {
        std::ifstream BIOS("gba_bios.bin", std::ios::binary);
        BIOS.read((char*)SROM, 16384);
        BIOS.close();
*DISPCNT = 0x0080;
*BG2PA = 0x0100;
*BG2PD = 0x0100;
*BG3PA = 0x0100;
*BG3PD = 0x0100;
*SOUNDBIAS = 0x0200;



*DISPCNT = 0x0300;
*BG3CNT = 0b0000000000000100;
*BG2CNT = 0b0000000000000100;
*BG1CNT = 0b0000001000001100;
*BG0CNT = 0b0000000100001000;
*BLDCNT = 0b0000001001000011;
*BLDALPHA = 0x0808;
*BLDY = 0x0008;
*MOSAIC = 0x0000;
*WINOUT = 0x0023;
*WININ = 0x0203;
*WIN0H = 0x0008;
*WIN0V = 0x0810;
*WIN1H = 0x0810;
*WIN1V = 0x1018;
        std::ifstream ifile("GIYGAS.bmp", std::ios::binary);
        ifile.read((char*)CDB[2] + 0x20, 32768);
        ifile.close();
        std::ifstream ifile1("GIYGASpal.bmp", std::ios::binary);
        ifile1.read((char*)BGpal[0], 32);
        ifile1.close();
        std::ifstream ifile2("Devilmachine.bmp", std::ios::binary);
        ifile2.read((char*)CDB[3] + 0x20, 32768);
        ifile2.close();
        std::ifstream ifile3("Devilmachinepal.bmp", std::ios::binary);
        ifile3.read((char*)BGpal[1], 32);
        ifile3.close();

        for(int i = 0; i < 16; i++)
        {
            //*(BGpal[0] + 0) = 0x8000 | (16 + 0 << 0) + (16 + 0 << 5) + (16 + 0 << 10);
        }
        for(int i = 0; i < 16; i++)
        {
            *(BGpal[1] + i) |= 0x8000;// | (16 + i << 0);
        }
        for(int i = 0; i < 16; i++)
        {
            *(BGpal[2] + i) = 0x8000 | (16 + i << 5);
        }
        for(int i = 0; i < 16; i++)
        {
            *(BGpal[3] + i) = 0x8000 | (16 + i << 0) + (16 + i << 5);
        }
        for(int i = 0; i < 16; i++)
        {
            *(BGpal[4] + i) = 0x8000 | (16 + i << 10);
        }
        for(int i = 0; i < 16; i++)
        {
            *(BGpal[5] + i) = 0x8000 | (16 + i << 0) + (16 + i << 10);
        }
        for(int i = 0; i < 16; i++)
        {
            *(BGpal[6] + i) = 0x8000 | (16 + i << 5) + (16 + i << 10);
        }
        for(int i = 0; i < 1024; i++)
        {
            *(SDB[1] + i) = screendata[i];
        }
        for(int i = 0; i < 1024; i++)
        {
            *(SDB[2] + i) = screendata[i] + 0x1000;
        }

        //*BG0VOFS = 255;
        //*BG0HOFS = 255;
//        scanline(0);
//        //*BG0VOFS = 255;
//        //*BG0HOFS = 255;
//        *MOSAIC = 0x0010;
//        scanline(1);
//        *MOSAIC = 0x0011;
//        scanline(2);
//        //*BG0VOFS = 254;
//        //*BG3HOFS = 254;
//        *MOSAIC = 0x0010;
//        scanline(3);
//        *MOSAIC = 0x0011;
//        scanline(4);
//        //*BG0VOFS = 253;
//        //*BG0HOFS = 255;
//        *MOSAIC = 0x0010;
//        scanline(5);
//        *MOSAIC = 0x0011;
//        scanline(6);
//        //*BG0VOFS = 252;
//        //*BG0HOFS = 254;
//        *MOSAIC = 0x0010;
//        scanline(7);
//        *MOSAIC = 0x0011;
//        scanline(8);
//        //*BG0VOFS = 251;
//        //*BG0HOFS = 255;
//        *MOSAIC = 0x0010;
//        scanline(9);
//        *MOSAIC = 0x0011;
//        scanline(10);
//        //*BG0VOFS = 250;
//        //*BG0HOFS = 254;
//        *MOSAIC = 0x0010;
//        scanline(11);
//        *MOSAIC = 0x0011;
//        scanline(12);
//        //*BG0VOFS = 249;
//        //*BG0HOFS = 255;
//        *MOSAIC = 0x0010;
//        scanline(13);
//        *MOSAIC = 0x0011;
//        scanline(14);
//        //*BG0VOFS = 248;
//        //*BG0HOFS = 254;
        //scanline(15);

        *BG0HOFS = 8;

        *BG1HOFS = 8;

        for(int i = 0; i < 256; i++)
        {
            scanline(i);
        }

        return true;
    }

    bool OnUserUpdate(float fElapsedTime) override
    {
        //std::cout << fElapsedTime << std::endl;
        fTimeaccu += fElapsedTime * 59.72693585540911;
        iTime = fTimeaccu;

        if(GetKey(olc::Key::LEFT).bPressed)
        {
            *BG0HOFS = (*BG0HOFS + 1) % 16;
        }
        if(GetKey(olc::Key::RIGHT).bHeld)
        {
            *BG0HOFS = (*BG0HOFS - 1);
        }
        if(GetKey(olc::Key::UP).bPressed)
        {
            *BG0VOFS = (*BG0VOFS + 1) % 16;
        }
        if(GetKey(olc::Key::DOWN).bHeld)
        {
            *BG0VOFS = (*BG0VOFS - 1);
        }
        if(GetKey(olc::Key::SPACE).bPressed)
        {
            *BG0CNT ^= 0x0001;
        }

        for(int i = 0; i < 256; i++)
        {
            scanline(i);
            *BG0HOFS = cos((i + (u8)iTime) * 2 * (3.141592653589793 / 64)) * sin((u8)iTime * (3.141592653589793 / 256)) * 32;
            *BG1VOFS = cos(((u8)(i + (iTime & 0xFF))) * (3.141592653589793 / 128)) * 16;
        }

        DrawSprite({0, 0}, &sprScreen);
        return true;
    }
};

int main()
{
    gameinst fufuta;
    if(fufuta.Construct(240, 160, 4, 4, 0, 0, 0))
    {
        fufuta.Start();
    }
}
